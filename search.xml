<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title></title>
      <link href="/2020/03/03/mysqlDesignSpecification/"/>
      <url>/2020/03/03/mysqlDesignSpecification/</url>
      
        <content type="html"><![CDATA[<h1 id="Mysql-设计规范"><a href="#Mysql-设计规范" class="headerlink" title="Mysql 设计规范"></a>Mysql 设计规范</h1><p>公司要开发一个新项目，之前是<code>.NET Framework + Sql Server</code>,这次要用<code>.NET Core + Mysql</code>,没怎么接触过<code>mysql</code>,所以做数据库设计之前，结合网上的资料，以及项目的使用，总结了一下Mysql设计规范。按照规范设计了数据库，目前项目开始正常开发，没遇到因为数据库设计产生的问题，记录一下。ps.随着开发，应该还会记录下mysql与SQL server的差异。</p><h2 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h2><h3 id="基本命名原则"><a href="#基本命名原则" class="headerlink" title="基本命名原则"></a>基本命名原则</h3><ul><li>使用有意义的英文词汇，不要使用拼音或拼音缩写。</li><li>只能使用英文字母，数字，下划线，并以英文字母开头。</li><li>表名库名全部小写用_分隔，列名<code>Pascal</code>(避免代码中太多attribute)</li><li>避免用 <code>MySQL</code> 的保留字，如 <code>desc</code>，关键字如 <code>index</code>。</li><li>命名禁止超过32个字符，须见名之意，建议使用名词不是动词</li><li>数据库，数据表一律使用前缀<ul><li>临时库、表名必须以<code>tmp</code>为前缀，并以日期为后缀</li><li>备份库、表必须以<code>bak</code>为前缀，并以日期为后缀</li></ul></li></ul><h3 id="表命名"><a href="#表命名" class="headerlink" title="表命名"></a>表命名</h3><ul><li>同一个模块的表尽可能使用相同的前缀，表名称尽可能表达含义。所有日志表均以 log_ 开头</li></ul><h3 id="字段命名"><a href="#字段命名" class="headerlink" title="字段命名"></a>字段命名</h3><ul><li>表达其实际含义的英文单词或简写。布尔意义的字段以“Is”作为前缀，后接动词过去分词。</li><li>各表之间相同意义的字段应同名。各表之间相同意义的字段，以去掉模块前缀的表名+字段名命名。</li><li>外键字段用表名+字段名表示其关联关系。</li><li>表的主键一般都约定成为Id，自增类型，是别的表的外键均使用xxxId的方式来表明。</li></ul><h3 id="索引命名"><a href="#索引命名" class="headerlink" title="索引命名"></a>索引命名</h3><ul><li>非唯一索引必须按照<code>idx_字段名称_字段名称[_字段名]</code>进行命名</li><li>唯一索引必须按照 <code>uniq_字段名称_字段名称[_字段名]</code>进行命名</li></ul><h3 id="约束命名"><a href="#约束命名" class="headerlink" title="约束命名"></a>约束命名</h3><ul><li>主键约束：<code>pk_表名称</code>。</li><li>唯一约束：<code>uk_表名称_字段名</code> 。（应用中需要同时有唯一性检查逻辑。）</li><li>外键约束：<code>fk_从表名称_主表名称</code> 。</li></ul><h3 id="触发器命名"><a href="#触发器命名" class="headerlink" title="触发器命名"></a>触发器命名</h3><ul><li><code>trg_表名_操作</code> 。</li></ul><h3 id="函数过程命名"><a href="#函数过程命名" class="headerlink" title="函数过程命名"></a>函数过程命名</h3><ul><li>采用动词+名词的形式表达其含义。</li></ul><h3 id="序列命名"><a href="#序列命名" class="headerlink" title="序列命名"></a>序列命名</h3><ul><li>seq_表名</li></ul><h3 id="表设计规范"><a href="#表设计规范" class="headerlink" title="表设计规范"></a>表设计规范</h3><ol><li>表引擎取决于实际应用场景；日志及报表类表建议用<code>myisam</code>，与交易，审核，金额相关的表建议用<code>innodb</code>引擎。如无说明，建表时一律采用<code>innodb</code>引擎</li><li>默认使用<code>utf8mb4</code>字符集，数据库排序规则使用<code>utf8mb4_general_ci</code>，（由于数据库定义使用了默认，数据表可以不再定义，但为保险起见，建议都写上）。</li><li>所有表、字段均应用 <code>comment</code> 列属性来描述此表、字段所代表的真正含义，如枚举值则建议将该字段中使用的内容都定义出来。</li><li>如无说明，表中的第一个id字段一定是主键且为自动增长，禁止在非事务内作为上下文作为条件进行数据传递。禁止使用varchar类型作为主键语句设计。</li><li>如无说明，表必须包含<code>CreateTime</code>和<code>ModifyTime</code>字段，即表必须包含记录创建时间和修改时间的字段</li><li>如无说明，表必须包含<code>IsDel</code>，用来标示数据是否被删除，原则上数据库数据不允许物理删除。</li><li>用尽量少的存储空间来存数一个字段的数据<ul><li>能用int的就不用char或者varchar</li><li>能用tinyint的就不用int</li><li>使用UNSIGNED存储非负数值。</li><li>不建议使用ENUM、SET类型，使用TINYINT来代替</li><li>使用短数据类型，比如取值范围为0-80时，使用TINYINT UNSIGNED</li><li>存储精确浮点数必须使用DECIMAL替代FLOAT和DOUBLE</li><li>时间字段<ul><li>存储年使用YEAR类型。</li><li>存储日期使用DATE类型。</li><li>存储时间（精确到秒） 统一使用 DATETIME</li></ul></li><li>尽可能不使用TEXT（mysql磁盘读取检索）、BLOB类型</li><li>禁止在数据库中使用VARBINARY、BLOB存储图片、文件等。建议使用其他方式存储（TFS/SFS），MySQL只保存指针信息。</li></ul></li><li>如无备注，所有字段都设置NOT NULL，并设置默认值；</li><li>禁止在数据库中存储明文密码</li><li>如无备注，所有的布尔值字段，如<code>IsHot</code>、<code>IsDel</code>，都必须设置一个默认值，并设为0；</li><li>整形定义中不添加长度，比如使用INT，而不是INT[4]</li></ol><h2 id="索引设计规范"><a href="#索引设计规范" class="headerlink" title="索引设计规范"></a>索引设计规范</h2><p>MySQL的查询速度依赖良好的索引设计，因此索引对于高性能至关重要。合理的索引会加快查询速度（包括UPDATE和DELETE的速度，MySQL会将包含该行的page加载到内存中，然后进行UPDATE或者DELETE操作），不合理的索引会降低速度。MySQL索引查找类似于新华字典的拼音和部首查找，当拼音和部首索引不存在时，只能通过一页一页的翻页来查找。当MySQL查询不能使用索引时，MySQL会进行全表扫描，会消耗大量的IO。索引的用途：去重、加速定位、避免排序、覆盖索引。</p><h3 id="索引的基本规范"><a href="#索引的基本规范" class="headerlink" title="索引的基本规范"></a>索引的基本规范</h3><ol><li>索引数量控制，单张表中索引数量不超过5个，单个索引中的字段数不超过5个。<ul><li>综合评估数据密度和分布</li><li>考虑查询和更新比例</li></ul></li><li><p>对字符串使用前缀索引，前缀索引长度不超过8个字符，建议优先考虑前缀索引，必要时可添加伪列并建立索引。</p><ul><li><p>不要索引blob/text等字段,不要索引大型字段,这样做会让索引占用太多的存储空间</p><blockquote><p><strong>什么是前缀索引？</strong></p><p>前缀索引说白了就是对文本的前几个字符（具体是几个字符在建立索引时指定）建立索引，这样建立起来的索引更小，所以查询更快。 前缀索引能有效减小索引文件的大小，提高索引的速度。但是前缀索引也有它的坏处：MySQL 不能在 ORDER BY 或 GROUP BY 中使用前缀索引，也不能把它们用作覆盖索引(Covering Index)。</p><p>建立前缀索引的语法：<code>ALTER TABLE table_name ADD KEY(column_name(prefix_length))</code>;</p></blockquote></li></ul></li><li>主键准则<ul><li>表必须有主键</li><li>不使用更新频繁的列</li><li>尽量不选择字符串列</li><li>不使用<code>UUID MD5 HASH</code></li><li>默认使用非空的唯一键</li><li>建议选择自增或发号器</li></ul></li><li>索引禁忌<ul><li>不在低基数列上建立索引，例如“性别”</li><li>不在索引列进行数学运算和函数运算</li><li>不要索引常用的小型表</li></ul></li><li>尽量不使用外键<ul><li>外键用来保护参照完整性，可在业务端实现</li><li>对父表和子表的操作会相互影响，降低可用性</li><li>INNODB本身对online DDL的限制</li></ul></li></ol><h3 id="MYSQL-中索引的限制"><a href="#MYSQL-中索引的限制" class="headerlink" title="MYSQL 中索引的限制"></a>MYSQL 中索引的限制</h3><ul><li>MYISAM 存储引擎索引长度的总和不能超过 1000 字节</li><li>BLOB 和 TEXT 类型的列只能创建前缀索引</li><li>MYSQL 目前不支持函数索引</li><li>使用不等于 (!= 或者 &lt;&gt;) 的时候, MYSQL 无法使用索引。</li><li>过滤字段使用函数运算 (如 abs (column)) 后, MYSQL无法使用索引。</li><li>join语句中join条件字段类型不一致的时候MYSQL无法使用索引</li><li>使用 LIKE 操作的时候如果条件以通配符开始 (如 ‘%abc…’)时, MYSQL无法使用索引。</li><li>使用非等值查询的时候, MYSQL 无法使用 Hash 索引。</li></ul><h2 id="语句设计规范"><a href="#语句设计规范" class="headerlink" title="语句设计规范"></a>语句设计规范</h2><ol><li>使用预编译语句<ul><li>只传参数，比传递SQL语句更高效</li><li>一次解析，多次使用</li><li>降低SQL注入概率</li></ul></li><li>避免隐式转换<ul><li>会导致索引失效</li></ul></li><li>充分利用前缀索引<ul><li>必须是最左前缀</li><li>不可能同时用到两个范围条件</li><li>不使用%前导的查询，如like “%ab”</li></ul></li><li>不使用负向查询，如not in/like<ul><li>无法使用索引，导致全表扫描</li><li>全表扫描导致buffer pool利用率降低</li></ul></li><li>避免使用存储过程、触发器、UDF、events等<ul><li>让数据库做最擅长的事</li><li>降低业务耦合度，为sacle out、sharding留有余地</li><li>避开BUG</li></ul></li><li>避免使用大表的JOIN<ul><li>MySQL最擅长的是单表的主键/二级索引查询</li><li>JOIN消耗较多内存，产生临时表</li></ul></li><li>避免在数据库中进行数学运算<ul><li>MySQL不擅长数学运算和逻辑判断</li><li>无法使用索引</li></ul></li><li>视情况使用以下语句，减少与数据库的交互次数<ul><li><code>INSERT … ON DUPLICATE KEY UPDATE</code></li><li><code>REPLACE INTO、INSERT IGNORE 、INSERT INTO VALUES(),(),()</code></li><li><code>UPDATE … WHERE ID IN(10,20,50,…)</code></li></ul></li><li>合理的使用分页<ul><li>限制分页展示的页数</li><li>只能点击上一页、下一页</li><li>采用延迟关联</li></ul></li><li>拒绝大SQL，拆分成小SQL<ul><li>充分利用QUERY CACHE</li><li>充分利用多核CPU</li></ul></li><li>使用in代替or，in的值不超过1000个</li><li>禁止使用order by rand()</li><li>使用EXPLAIN诊断，避免生成临时表</li><li>果可以确认合并的两个结果集中不包含重复的数据,用 <code>union all</code> 而不是 <code>union</code></li><li>程序应有捕获 <code>SQL</code> 异常的处理机制</li><li>不使用<code>select *</code> ，SELECT语句只获取需要的字段</li><li><code>UPDATE、DELETE</code>语句不使用<code>LIMIT</code></li><li><code>INSERT</code>语句必须显式的指明字段名称，不使用<code>INSERT INTO table()</code></li><li><code>INSERT</code>语句使用<code>batch</code>提交（INSERT INTO table VALUES(),(),()……），values的个数不超过500</li><li>统计表中记录数时使用COUNT(*)，而不是COUNT(primary_key)和COUNT(1) 备注：仅针对<code>Myisam</code></li><li>数据更新建议使用二级索引先查询出主键，再根据主键进行数据更新</li><li>禁止使用跨库查询</li><li>禁止使用子查询，建议将子查询转换成关联查询</li><li>针对varchar类型字段的程序处理，请验证用户输入，不要超出其预设的长度；</li></ol><h2 id="REF"><a href="#REF" class="headerlink" title="REF"></a>REF</h2><ul><li><a href="https://docs.microsoft.com/en-us/sql/t-sql/data-types/ntext-text-and-image-transact-sql?view=sql-server-ver15" target="_blank" rel="noopener">ntext, text, and image (Transact-SQL)</a></li><li><a href="https://dev.mysql.com/doc/refman/5.7/en/blob.html" target="_blank" rel="noopener">The BLOB and TEXT Types</a></li><li><a href="https://www.biaodianfu.com/mysql-best-practices.html" target="_blank" rel="noopener">MySQL命名、设计及使用规范</a></li><li><a href="https://www.cnblogs.com/ivictor/p/5028368.html" target="_blank" rel="noopener">MySQL中有关TIMESTAMP和DATETIME的总结</a></li><li><a href="https://www.bbsmax.com/A/B0zqQP8Gzv/" target="_blank" rel="noopener">SQLServer与MySQL约束/索引命名的一些差异总结</a></li><li><a href="https://www.tobe98.com/index.php/2020/%E6%B5%85%E8%B0%88-mysql-%E4%B8%AD%E7%9A%84%E4%BA%8B%E5%8A%A1%E5%92%8C-acid/" target="_blank" rel="noopener">浅谈 MYSQL 中的事务和 ACID</a></li><li><a href="https://ops-coffee.cn/s/zfR5kn1tejVSiH-mireT3A" target="_blank" rel="noopener">专业的MySQL开发规范</a></li><li><a href="https://www.biaodianfu.com/mysql-myisam-innodb.html" target="_blank" rel="noopener">MySQL存储引擎中的MyISAM和InnoDB</a></li><li><a href="https://www.jianshu.com/p/7e60dbd59138" target="_blank" rel="noopener">数据库设计中的命名规范</a></li><li><a href="https://www.cnblogs.com/mysql-dba/p/6192897.html" target="_blank" rel="noopener">详谈 MySQL Online DDL</a></li><li><a href="https://www.cnblogs.com/RunForLove/p/5693986.html" target="_blank" rel="noopener">数据库表结构设计方法及原则</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> design </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>关于Cookie的属性说明</title>
      <link href="/2019/07/16/AboutCookie/"/>
      <url>/2019/07/16/AboutCookie/</url>
      
        <content type="html"><![CDATA[<h2 id="Cookie服务的首部字段"><a href="#Cookie服务的首部字段" class="headerlink" title="Cookie服务的首部字段"></a>Cookie服务的首部字段</h2><table><thead><tr><th>首部字段名</th><th>说明</th><th>首部类型</th></tr></thead><tbody><tr><td>Set-Cookie</td><td>开始状态管理所使用的Cookie信息</td><td>响应首部字段</td></tr><tr><td>Cookie</td><td>服务器收到的Cookie信息</td><td>请求首部字段</td></tr></tbody></table><h3 id="Set-Cookie-字段属性"><a href="#Set-Cookie-字段属性" class="headerlink" title="Set-Cookie 字段属性"></a>Set-Cookie 字段属性</h3><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>NAME=Value</td><td>赋予Cookie的名称和其值（必需项）</td></tr><tr><td>expires=DATE</td><td>Cookie的有效期（若不明确指定则默认为浏览器关闭前为止）</td></tr><tr><td>path=PATH</td><td>将服务器上的文件目录作为Cookie的适用对象（若不指定则默认为文档所在的文件目录）</td></tr><tr><td>domain=域名</td><td>作为Cookie适用对象的域名（若不指定则默认为创建Cookie的服务器的域名）</td></tr><tr><td>Secure</td><td>仅在HTTPS安全通信时才会发送Cookie</td></tr><tr><td>HttpOnly</td><td>加以限制，使Cookie不能被JavaScript脚本访问</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>String VS StringBuilder</title>
      <link href="/2019/06/18/String-VS-StringBuilder/"/>
      <url>/2019/06/18/String-VS-StringBuilder/</url>
      
        <content type="html"><![CDATA[<p>wait, just wait</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Redis .NET CORE 简单使用</title>
      <link href="/2019/06/10/Redis/"/>
      <url>/2019/06/10/Redis/</url>
      
        <content type="html"><![CDATA[<p>最近在面试，很多公司都有要求使用过 <code>Redis</code> ，之前没有用过，既然很多公司都要求会，自然是有原因的。本文试着简单学习下 <code>Redis</code> ，并了解下它与 <code>MemoryCache</code> 有什么区别的（之前在 <code>LPS</code> 缓存是用的 <code>MemoryCache</code> ）。</p><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>看下<a href="https://redis.io/" target="_blank" rel="noopener">官网</a>的说明，</p><blockquote><p>Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache and message broker. It supports data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes with radius queries and streams. Redis has built-in replication, Lua scripting, LRU eviction, transactions and different levels of on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning with Redis Cluster.</p></blockquote><p><code>Redis</code> 是一个开源的内存数据结构服务器，可以作为 <code>数据库</code> ，<code>高速缓存</code> ，<code>消息队列代理使用</code> 。支持 <code>字符串</code> ，<code>哈希表</code> ，<code>列表</code>，<code>集合</code> 等数据结构。然后内置复制，支持事务，以及不同级别的磁盘持久化（<code>Lua</code>,<code>LRU</code>没理解是什么，先跳过，有需要再研究）。<code>Redis Sentinel</code> （哨兵）和<code>Redis Cluster</code>（集群）一个支持高可用，一个支持自动分区。</p><p>嗯，看着介绍功能可以说是很强大了，不过不知道公司具体会用到什么程度，先简单看下吧。</p><h2 id="download"><a href="#download" class="headerlink" title="download"></a>download</h2><p><code>linux</code>的虚拟机也不知道在不在了，好久没用了。先用<code>windows</code>的吧。官网没有下载地址，<code>git</code>是有的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/microsoftarchive/redis/releases</span><br></pre></td></tr></table></figure><p>我下了最新的<code>3.2.100</code>。</p><h2 id="install-start"><a href="#install-start" class="headerlink" title="install/start"></a>install/start</h2><p>包中自带一个<code>Windows Service Documentation.docx</code>很贴心。按照文档的说明，<code>install</code>，<code>start</code>。</p><p><img src="https://i.ibb.co/7gznyKf/install-start.png" alt="IMG"></p><p>嗯，到这一步已经装好服务，并启动了。然后看下官网的<a href="https://redis.io/topics/quickstart" target="_blank" rel="noopener">quickStart</a>。</p><h2 id="quickStart"><a href="#quickStart" class="headerlink" title="quickStart"></a>quickStart</h2><p>按照官网说的做，俺也一样。</p><p><img src="https://i.ibb.co/2WLwMPC/quick-Start.png" alt="IMG"></p><h2 id="NET"><a href="#NET" class="headerlink" title=".NET"></a>.NET</h2><p>看下官网中 <code>C#</code> 客户端是有多个的，推荐(下图中有五角星的)使用的是有三个 <code>Nhiredis</code>,<code>ServiceStack.Redis</code>,<code>StackExchange.Redis</code>，估计都是足够用的，看下哪个 <code>star</code> 多就用哪个吧。<code>ServiceStack.Redis</code>(1817),<code>StackExchange.Redis</code>(3547)，<code>StackExchange.Redis</code> 获得了胜利。</p><p><img src="https://i.ibb.co/PFFv7Qq/clients.png" alt="IMG"></p><p>新建一个 <code>.NET CORE</code> 控制台项目。</p><figure class="highlight plain"><figcaption><span>NUGET</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSTALL-PACKAGE StackExchange.Redis</span><br></pre></td></tr></table></figure><p>真棒，有一个<code>io</code>的文档<a href="https://stackexchange.github.io/StackExchange.Redis/Basics" target="_blank" rel="noopener">https://stackexchange.github.io/StackExchange.Redis/Basics</a></p><p><img src="https://i.ibb.co/J390QQR/basicUse.png" alt="IMG"></p><p>成功。</p><p>好了，基本使用就到这儿了，明天还有个面试，要收拾东西睡觉了。按照目前了解的对比下与<code>MemoryCache</code>的区别也就是 <code>MemoryCache</code> 是基于<code>process</code> 的，而<code>Redis</code> 是单独的服务器。如果是单程序应该都是一样的，多程序使用相同缓存的话，<code>Redis</code> 肯定优于<code>MemoryCache</code>（不考虑<code>持久化</code>）。有空或者要用到的时候再深入研究吧。</p><h2 id="REF"><a href="#REF" class="headerlink" title="REF"></a>REF</h2><ul><li><a href="https://redis.io/" target="_blank" rel="noopener">redis</a></li><li><a href="https://redis.io/topics/quickstart" target="_blank" rel="noopener">redis quickstart</a></li><li><a href="[https://stackexchange.github.io/StackExchange.Redis/Basics]">StackExchange.Redis</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> BU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
            <tag> .NET CORE </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Trac-DailyReportAnalysis</title>
      <link href="/2019/06/05/Trac-DailyReportAnalysis/"/>
      <url>/2019/06/05/Trac-DailyReportAnalysis/</url>
      
        <content type="html"><![CDATA[<h2 id="WHY"><a href="#WHY" class="headerlink" title="WHY"></a>WHY</h2><p>每年要写年终总结，最近做的事情会记着，之前的却不一定记得那么清。个人有在 <a href="https://trac.edgewall.org/" target="_blank" rel="noopener">Trac</a> 写日志的习惯，可以说是清楚的记载了工作内容，但是一天一天看也太浪费时间，而且效果也不好，没有一个实际的量化。于是就想着爬一下日志内容，分析下词频，这样就可以直观的看自己的工作内容了。</p><h2 id="HOW"><a href="#HOW" class="headerlink" title="HOW"></a>HOW</h2><p>虽然也自学过一点<code>python</code>,但是学的很基础，而且忘得也差不多了。马上就要交年终总结了，还是用自己习惯的语言吧。大概查了一下用<code>C#</code>爬网页，觉得没啥问题，就开始了。嗯，没错了，想的容易，做起来总会遇到问题：</p><h3 id="爬取html"><a href="#爬取html" class="headerlink" title="爬取html"></a>爬取html</h3><p>这个还是简单的，毕竟是常用的东西，用<code>System.Net.WebRequest</code>就行了。大概放下代码吧。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> request = WebRequest.CreateHttp(url);</span><br><span class="line"><span class="keyword">var</span> response = request.GetResponse();</span><br><span class="line"><span class="keyword">var</span> reader = <span class="keyword">new</span> StreamReader(response.GetResponseStream(), Encoding.UTF8);</span><br><span class="line"><span class="keyword">var</span> html = reader.ReadToEnd();</span><br></pre></td></tr></table></figure><p>嗯，然后就报错了，人生总是这样，想的不够全面就执行，总会遇到问题。报错是因为需要证书，还有登录的操作，再查下怎么实现吧。</p><h3 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h3><p>嗯，查了一下，前人早就解决了证书的问题。<a href="https://stackoverflow.com/questions/39528973/force-httpwebrequest-to-send-client-certificate" target="_blank" rel="noopener">stackoverflow.com</a></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.ClientCertificates.Add(<span class="keyword">new</span> X509Certificate2(path, password))</span><br></pre></td></tr></table></figure><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cache = <span class="keyword">new</span> CredentialCache();</span><br><span class="line">cache.Add(<span class="keyword">new</span> Uri(url), <span class="string">"Basic"</span>, <span class="keyword">new</span> NetworkCredential(userName, userPassword));</span><br><span class="line">request.Credentials = cache;</span><br></pre></td></tr></table></figure><h3 id="取日志内容"><a href="#取日志内容" class="headerlink" title="取日志内容"></a>取日志内容</h3><p>然后就是从<code>html</code>中取日志的内容了，因为比较容易区分我就直接写正则了，就不粘代码了。</p><h3 id="词频统计"><a href="#词频统计" class="headerlink" title="词频统计"></a>词频统计</h3><p>用的是 <a href="https://github.com/anderscui/jieba.NET" target="_blank" rel="noopener">jieba.NET</a> ,github上的readme足够清晰，这里就不啰嗦了。</p><h3 id="词云图"><a href="#词云图" class="headerlink" title="词云图"></a>词云图</h3><p>想着是用代码实现，但是试了几个，太丑了，不配放到年终总结里，查了一下有一个在线网站很好用。<br><a href="https://wordart.com/create" target="_blank" rel="noopener">wordart</a> <em>偶尔需要穿越屏障用</em>，操作很简单，将词频导入，设置你想要的形状（SHAPES）,字体（FONTS，默认的没有中文字体 :smile: ，需要手动导入）。</p><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p><img src="https://i.ibb.co/bH9PWH8/result-png.jpg" alt="IMG"><br>html文件中包含，所有的日志，以及词频统计。</p><p><img src="https://i.ibb.co/C5ZPjGT/Word-Art.png" alt="IMG"><br>这个就是生成的词云图了。</p><h2 id="还可以改进的地方"><a href="#还可以改进的地方" class="headerlink" title="还可以改进的地方"></a>还可以改进的地方</h2><ul><li>词频统计过滤掉没用的内容，比如符号，虽然<code>wordart</code>也支持过滤</li><li>多线程爬取，提升爬取效率，虽然一年只用一次。。。</li></ul><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/JiChao99/Trac-DailyReportAnalysis" target="_blank" rel="noopener">github</a></p><h2 id="REF"><a href="#REF" class="headerlink" title="REF"></a>REF</h2><ul><li><a href="https://github.com/anderscui/jieba.NET" target="_blank" rel="noopener">jieba.NET</a></li><li><a href="https://stackoverflow.com/questions/39528973/force-httpwebrequest-to-send-client-certificate" target="_blank" rel="noopener">stackoverflow.com</a></li><li><a href="https://wordart.com/create" target="_blank" rel="noopener">wordart</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Trac </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Trac-NoPreview Chrome Extension</title>
      <link href="/2019/05/07/Chrome-Extensions/"/>
      <url>/2019/05/07/Chrome-Extensions/</url>
      
        <content type="html"><![CDATA[<h2 id="WHY"><a href="#WHY" class="headerlink" title="WHY"></a>WHY</h2><p>公司用<a href="https://trac.edgewall.org/" target="_blank" rel="noopener">Trac</a>作为管理系统。修改Ticket，或者提交工作日志时，总需要先预览才能提交（应该是有权限的人设置的），为了方便自己使用，就花了点时间写了一个浏览器插件，可以不经过预览就提交，顺便学习下<code>Chrome</code>插件的开发。</p><h2 id="HOW"><a href="#HOW" class="headerlink" title="HOW"></a>HOW</h2><p>先研究下不用插件怎么实现，现在的情况是不<code>Preview</code>的话，<code>Submit changes</code>的按钮是灰色的，嗯那就应该只是将按钮设为disable了。嗯F12，去掉<code>disabled</code>果然可以直接提交了。那么现在插件要做的事情只是将<code>disabled</code>设为<code>false</code>就可以了。然后查看几个页面发现他们有共同的<code>class=&quot;trac-disable-on-submit&quot;</code>.</p><p><img src="https://i.ibb.co/Gkvvzzf/trac-nopreview.png" alt="IMG"></p><p>然后我们来看看<code>Chrome</code>插件的官方文档。概述 <a href="https://developer.chrome.com/extensions/overview" target="_blank" rel="noopener">overview(可能需要穿越屏障)</a>.</p><p>简单来说分为以下几个部分</p><ul><li>Manifest : 指定图标，脚本文件位置，插件描述（版本，作者）</li><li>Background Script : 后台脚本（目前没用到）</li><li>UI Elements : 插件的页面，可简单,可复杂</li><li>Content Script ： 要执行的 <code>javaScript</code> 代码</li><li>Options Page ： 插件的配置页面（目前没用到）</li></ul><p>上述内容，对照着图更好理解（放到了自己的图床上，应该都可以看到了）</p><p><img src="https://i.ibb.co/0CksY7k/contentscriptarc.png" alt="IMG"></p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><p>内容并不多，就把所以代码都粘上来了。</p><h3 id="manifest-json"><a href="#manifest-json" class="headerlink" title="manifest.json"></a>manifest.json</h3><figure class="highlight json"><figcaption><span>manifest.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"manifest_version"</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"Trac-NoPreview"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">"For Trac No Preview Submit"</span>,</span><br><span class="line">  <span class="attr">"icons"</span>: &#123;</span><br><span class="line">    <span class="attr">"16"</span>: <span class="string">"images/trac16.png"</span>,</span><br><span class="line">    <span class="attr">"32"</span>: <span class="string">"images/trac32.png"</span>,</span><br><span class="line">    <span class="attr">"48"</span>: <span class="string">"images/trac48.png"</span>,</span><br><span class="line">    <span class="attr">"128"</span>: <span class="string">"images/trac128.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"browser_action"</span>: &#123;</span><br><span class="line">    <span class="attr">"default_icon"</span>: &#123;</span><br><span class="line">      <span class="attr">"16"</span>: <span class="string">"images/trac16.png"</span>,</span><br><span class="line">      <span class="attr">"32"</span>: <span class="string">"images/trac32.png"</span>,</span><br><span class="line">      <span class="attr">"48"</span>: <span class="string">"images/trac48.png"</span>,</span><br><span class="line">      <span class="attr">"128"</span>: <span class="string">"images/trac128.png"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"default_popup"</span>: <span class="string">"index.html"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"permissions"</span>: [</span><br><span class="line">    <span class="string">"activeTab"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"content_scripts"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"matches"</span>: [</span><br><span class="line">        <span class="string">"https://trac.edgewall.org/*"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"js"</span>: [</span><br><span class="line">        <span class="string">"contentScript.js"</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">"Alec.Ji"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>应该只有<code>permissions</code> ，<code>content_scripts</code> 这两部分不是能直接感受，单独说下，其他都好理解。</p><ul><li><p>permissions:activeTab  允许插件访问当前活动的选项卡，具体的可查看<a href="https://developer.chrome.com/extensions/activeTab" target="_blank" rel="noopener">https://developer.chrome.com/extensions/activeTab</a></p></li><li><p>content_scripts</p><ul><li>matches 匹配该url 时才会执行js</li><li>js 指定contentScript位置</li></ul></li></ul><h3 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h3><figure class="highlight html"><figcaption><span>index.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/trac128.png"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>By Alec.ji<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/Wechat.png"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="contentScript-js"><a href="#contentScript-js" class="headerlink" title="contentScript.js"></a>contentScript.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> elements = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"trac-disable-on-submit"</span>);</span><br><span class="line"><span class="keyword">if</span> (elements.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    elements[<span class="number">0</span>].disabled = <span class="literal">false</span>;</span><br><span class="line">    elements[<span class="number">0</span>].value += <span class="string">"(Trac-NoPreview)"</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Trac-NoPreview Success"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><ol><li>用Chrome访问 <a href="chrome://extensions/" target="_blank" rel="noopener">chrome://extensions/</a> 或者用 Edge(chrome内核)访问 <a href="edge://extensions/" target="_blank" rel="noopener">edge://extensions/</a></li><li>打开开发者模式</li><li>选择加载已解压的扩展程序，选择 <code>Trac-NoPreview</code> 文件夹，确认即可</li><li>打开一个<code>Ticket</code>的页面，看看效果。</li></ol><p><img src="https://i.ibb.co/Yp5DSxk/trac-nopreview3.png" alt="IMG"> 懂我的意思吧 :smile: ，等我攒够了钱我就提交到chrome 商店（感谢 X，呼呼小笼包，R，一只鱼，Barry.shi 的打赏）。</p><h2 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h2><p>效果如图，已经好用了</p><p><img src="https://i.ibb.co/VvGTrSh/trac-nopewview2.png" alt="IMG"></p><h2 id="还想要实现的"><a href="#还想要实现的" class="headerlink" title="还想要实现的"></a>还想要实现的</h2><ul><li><p>支持登录，跟踪 <code>Ticket</code></p></li><li><p>提醒写日志</p></li><li><p>批量处理<code>ticket</code>, 修改状态，<code>owner</code></p></li><li><p>…</p></li></ul><h2 id="一点小感悟"><a href="#一点小感悟" class="headerlink" title="一点小感悟"></a>一点小感悟</h2><p>经过自己学习开发才知道，chrome插件的强大。便利的同时，也感觉到了危险，如果给了足够的权限，插件能做的事情相当多，所以对于不确认安全的还是要慎用。</p><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/JiChao99/Trac-NoPreview" target="_blank" rel="noopener">github</a></p><h2 id="REF"><a href="#REF" class="headerlink" title="REF"></a>REF</h2><ul><li>官方文档 <a href="https://developer.chrome.com/extensions" target="_blank" rel="noopener">https://developer.chrome.com/extensions</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Chrome Extensions </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chrome Extensions </tag>
            
            <tag> Trac </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Postman 进阶使用技巧</title>
      <link href="/2019/01/27/Postman-advanced-use-method/"/>
      <url>/2019/01/27/Postman-advanced-use-method/</url>
      
        <content type="html"><![CDATA[<p>由于工作中涉及到 <code>API</code> 的开发，以及第三方的对接，<code>Postman</code> 总是少不了使用的，除了简单的发请求，也发现了 <code>Postman</code> 自带的可以用到的功能，做个记录，避免再花时间学习。</p><hr><blockquote><p><strong>Postman makes API development faster, easier, and better</strong></p></blockquote><h2 id="Pre-request-scripts"><a href="#Pre-request-scripts" class="headerlink" title="Pre-request scripts"></a>Pre-request scripts</h2><blockquote><p>Pre-request scripts are snippets of code associated with a collection request that are executed before the request is sent. This is perfect for use-cases like including the timestamp in the request headers or sending a random alphanumeric string in the URL parameters.</p></blockquote><p>简单来说 <code>Pre-request scripts</code> 就是一个请求前的代码(<code>JavaScript</code>)片段。对于在请求头中包含 <code>时间戳</code> 或在 <code>URL</code> 参数中发送随机 <code>字母数字</code> 字符串的情况（<em>当然也可以是更复杂的，可以看下面的例子</em>），易用且好用。</p><h3 id="Pre-request-scripts-Example"><a href="#Pre-request-scripts-Example" class="headerlink" title="Pre-request scripts Example"></a>Pre-request scripts Example</h3><p>比如，请求的接口需要传一个 <code>Base64(APPID + 时间戳)</code> 的 <code>token</code></p><figure class="highlight js"><figcaption><span>Pre-request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> timestamp = <span class="built_in">Math</span>.round(<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()/<span class="number">1000</span>);  <span class="comment">//时间戳</span></span><br><span class="line"><span class="keyword">var</span> appid = <span class="string">"test"</span>;</span><br><span class="line"><span class="keyword">var</span> secret = <span class="string">"dswybs"</span>;</span><br><span class="line"><span class="keyword">var</span> str = appid + secret + timestamp;</span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> hash = CryptoJS.SHA256(str);    <span class="comment">//CryptoJS</span></span><br><span class="line"><span class="keyword">var</span> strEnc = hash.toString();</span><br><span class="line"><span class="built_in">console</span>.log(strEnc);</span><br><span class="line"></span><br><span class="line">pm.environment.set(<span class="string">"token"</span>, strEnc);    <span class="comment">//添加环境变量，不同版本可能此处语句不同。</span></span><br><span class="line">pm.globals.set(<span class="string">"appid"</span>, appid);     <span class="comment">//添加全局变量，不同版本可能此处语句不同。</span></span><br></pre></td></tr></table></figure><ul><li><a href="https://code.google.com/p/crypto-js/" target="_blank" rel="noopener"><code>CryptoJS</code></a> Postman常用的库之一。支持主流的加密算法. 如 <code>AES</code>，<code>DES</code> ， <code>HMAC-MD5</code> ， <code>HMAC-SHA1 / 3/256/512</code> ，<code>MD5</code> 等</li></ul><p>效果如图<br><img src="https://i.ibb.co/T0QG22c/Postman-Pre-request1.png" alt="IMG"><br><img src="https://i.ibb.co/h1NPNb4/Postman-Pre-request2.png" alt="IMG"></p><ul><li><code>Ctrl + Alt + C</code> 可以显示出 <code>Postman</code> 的控制台（查看log，以及 <code>HTTP</code> 报文），方便观察结果，建议打开，当然有需要的话，开个 <code>Fiddler</code> 是更好的了。</li></ul><p>除了<code>CryptoJS</code>,<strong>Postman</strong> 还支持 <a href="https://lodash.com/" target="_blank" rel="noopener"><code>Lodash</code></a> , <a href="https://cheerio.js.org/" target="_blank" rel="noopener"><code>cheerio</code></a> 等.</p><h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><p>和 <code>Pre-request scripts</code> 刚好相反， <code>Test</code> 是请求后执行的代码(<code>JavaScript</code>)，用来测试请求的响应是否符合需求。比如，查看 <code>Http Status Code(HTTP 状态码)</code> , <code>响应时间</code>  甚至是 <code>response content(响应的内容)</code> 。借用下官方的图。</p><p><img src="https://s3.amazonaws.com/postman-static-getpostman-com/postman-docs/WS-randomFullTests2.png" alt="IMG"></p><h3 id="Test-Example"><a href="#Test-Example" class="headerlink" title="Test Example"></a>Test Example</h3><p>为了做测试，特意写了一个 <code>API</code> (实际是<code>.NET Core 3.0</code> 出了，想试一下，一行代码搞定，真香)</p><figure class="highlight ps"><figcaption><span>console</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dotnet new webapi -o TodoApi</span><br><span class="line">code -r TodoApi</span><br></pre></td></tr></table></figure><p>简单的写了一个 <code>response</code></p><p><img src="https://i.ibb.co/Lr3kqtd/API-response.png" alt="IMG"></p><p>针对性的写一些，测试语句</p><figure class="highlight js"><figcaption><span>Test Script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> jsonData = pm.response.json();</span><br><span class="line"><span class="built_in">console</span>.log(jsonData.id);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 状态码</span></span><br><span class="line">pm.test(<span class="string">"Status code is 200"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    pm.response.to.have.status(<span class="number">200</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 响应时间</span></span><br><span class="line">pm.test(<span class="string">"Response time is less than 200ms"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    pm.expect(pm.response.responseTime).to.be.below(<span class="number">200</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// response content</span></span><br><span class="line">pm.test(<span class="string">"by JICHAO"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    pm.expect(jsonData.type).to.eql(<span class="string">"JICHAO Postman-advanced-use-method"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>测试结果如下图</p><p><img src="https://i.ibb.co/HhCj054/Postman-test.png" alt="IMG"></p><p>这样就可以清晰的看到结果了，不需要再自己看返回值，判断是否正确。</p><hr><p>Q : 可能看到这就有人要问了，上边的两个是很有用，但是实际的业务是多个请求，每个请求都要再点一下 <code>Send</code> 岂不是很累？</p><p>A : 好问题好问题，这就是我们接下来要看的功能了。</p><hr><h2 id="Collections"><a href="#Collections" class="headerlink" title="Collections"></a>Collections</h2><p>先看下官方的说明</p><blockquote><p>A Postman Collection lets you group individual requests together. You can organize these requests into folders.</p></blockquote><p>简单来说，就是多个请求按照一定顺序组合在一起就是 <code>Collections</code> 了</p><h3 id="Collections-Example"><a href="#Collections-Example" class="headerlink" title="Collections Example"></a>Collections Example</h3><p>一个实际的例子，比如你有烤鱼店的储值卡，当你结账时需要报你的卡号或者手机号，然后老版会查下你有多少钱，是否有会员价（查询接口），然后支付（支付接口）</p><h4 id="查询接口"><a href="#查询接口" class="headerlink" title="查询接口"></a>查询接口</h4><p>Pre-request scripts</p><figure class="highlight js"><figcaption><span>Pre-request scripts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试卡号池，当然也可以设置为从文件中读取</span></span><br><span class="line"><span class="keyword">var</span> cardArr = [</span><br><span class="line"><span class="string">"0123456"</span>,</span><br><span class="line"><span class="string">"0123457"</span>,</span><br><span class="line"><span class="string">"0123458"</span>,</span><br><span class="line">...,</span><br><span class="line"><span class="string">"0123555"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//随机取一个卡号，作为环境变量</span></span><br><span class="line"><span class="keyword">var</span> cardNo = cardArr[<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*<span class="number">100</span>)];</span><br><span class="line">pm.environment.set(<span class="string">"cardNo"</span>, cardNo);</span><br></pre></td></tr></table></figure><p>Test scripts</p><figure class="highlight js"><figcaption><span>Test scripts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//Status code</span></span><br><span class="line">pm.test(<span class="string">"Status code is 200"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    pm.response.to.have.status(<span class="number">200</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Response time</span></span><br><span class="line">pm.test(<span class="string">"Response time is less than 999ms"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    pm.expect(pm.response.responseTime).to.be.below(<span class="number">999</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> jsonData = pm.response.json();</span><br><span class="line"><span class="built_in">console</span>.log(jsonData.CardNumber)</span><br><span class="line"></span><br><span class="line"><span class="comment">//取当前卡的余额 * 0.8，作为环境变量，支付用</span></span><br><span class="line"><span class="keyword">var</span> amount = jsonData.money * <span class="number">0.8</span>;</span><br><span class="line">pm.environment.set(<span class="string">"amount"</span>, amount);</span><br><span class="line"><span class="built_in">console</span>.log(amount)</span><br></pre></td></tr></table></figure><h4 id="支付接口"><a href="#支付接口" class="headerlink" title="支付接口"></a>支付接口</h4><p>Body</p><figure class="highlight"><figcaption><span>Body</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"cardNumber"</span>: <span class="string">"&#123;&#123;cardNo&#125;&#125;"</span>,</span><br><span class="line">    <span class="attr">"password"</span>: <span class="string">"****"</span>,</span><br><span class="line">    <span class="attr">"amount"</span>: <span class="string">"&#123;&#123;amount&#125;&#125;"</span>,</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此处的 <code> {{}} </code> 说明是变量，括号中的内容为变量名。</p><p>Test scripts</p><figure class="highlight js"><figcaption><span>Test scripts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//Status code</span></span><br><span class="line">pm.test(<span class="string">"Status code is 200"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    pm.response.to.have.status(<span class="number">200</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Response time</span></span><br><span class="line">pm.test(<span class="string">"Response time is less than 3000ms"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    pm.expect(pm.response.responseTime).to.be.below(<span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//计算余额是否正确</span></span><br><span class="line"><span class="keyword">var</span> balance = pm.variables.get(<span class="string">"balance"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> jsonData = pm.response.json();</span><br><span class="line">pm.test(<span class="string">"扣款不正确"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    pm.expect(jsonData.lastBalance - jsonData.balance).to.eql(amount);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>做完这些准备工作就可以，设置一个 <code>Collection</code> 并运行它了。设置项，有如下几项，<a href="https://learning.getpostman.com/docs/postman/collection_runs/starting_a_collection_run/" target="_blank" rel="noopener">官方文档</a>描述的更为详细，此处就不展开说了.<strong>需要注意的是 <code>Iterations</code> 是迭代，不是并发</strong></p><p><img src="https://i.ibb.co/z6TGbFX/Postman-Collections-setting.png" alt="IMG"></p><p>Result<br>结果如下图，是不是可以很方便的看出测试结果。</p><p><img src="https://i.ibb.co/5nwGMTV/Postman-Collections.png" alt="IMG"></p><p><em>BTW,<code>collection</code> 支持在 <a href="https://learning.getpostman.com/docs/postman/collection_runs/newman_with_docker/" target="_blank" rel="noopener"><code>Docker(可点击跳转)</code></a> 和 <a href="https://learning.getpostman.com/docs/postman/collection_runs/integration_with_jenkins/" target="_blank" rel="noopener"><code>Jenkins(可点击跳转)</code></a> 中使用，每次看到这些东西就有种转测试的冲动。。。，本人这部分也没有研究，有需要的可以研究下。</em></p><h2 id="REF"><a href="#REF" class="headerlink" title="REF"></a>REF</h2><ol><li><a href="https://learning.getpostman.com/" target="_blank" rel="noopener">Postman Learning Center</a></li><li><a href="https://learning.getpostman.com/docs/postman/scripts/pre_request_scripts" target="_blank" rel="noopener">pre_request_scripts</a></li><li><a href="https://learning.getpostman.com/docs/postman/scripts/test_scripts" target="_blank" rel="noopener">test_scripts</a></li><li><a href="https://learning.getpostman.com/docs/postman/environments_and_globals/intro_to_environments_and_globals" target="_blank" rel="noopener">intro_to_environments_and_globals</a></li><li><a href="https://learning.getpostman.com/docs/postman/collections/intro_to_collections" target="_blank" rel="noopener">collections</a></li></ol>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>LEFT JOIN ON AND/WHERE</title>
      <link href="/2018/11/26/LEFT-JOIN-ON-WHERE/"/>
      <url>/2018/11/26/LEFT-JOIN-ON-WHERE/</url>
      
        <content type="html"><![CDATA[<h1 id="LEFT-JOIN-ON-AND-WHERE"><a href="#LEFT-JOIN-ON-AND-WHERE" class="headerlink" title="LEFT JOIN ON AND/WHERE"></a>LEFT JOIN ON AND/WHERE</h1><h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><blockquote><p>这两个SQL查询的结果相同吗?</p></blockquote><figure class="highlight sql"><figcaption><span>SQL</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TableA a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> TableB b <span class="keyword">ON</span>  b.AId =a.TableAId <span class="keyword">AND</span> a.TableAId =<span class="number">1</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TableA a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> TableB b <span class="keyword">ON</span>  b.AId =a.TableAId <span class="keyword">WHERE</span> a.TableAId = <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="Test-SQL"><a href="#Test-SQL" class="headerlink" title="Test SQL"></a>Test SQL</h2><h3 id="Creat-Database"><a href="#Creat-Database" class="headerlink" title="Creat Database"></a>Creat Database</h3><figure class="highlight sql"><figcaption><span>TEST Database</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Create a new database called 'TEST' for XKA</span></span><br><span class="line"><span class="comment">-- Connect to the 'master' database to run this snippet</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">master</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">-- Create the new database if it does not exist already</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="keyword">name</span></span><br><span class="line"><span class="keyword">FROM</span> sys.databases</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">name</span> = N<span class="string">'TEST'</span> </span><br><span class="line">)</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">TEST</span></span><br><span class="line"><span class="keyword">GO</span></span><br></pre></td></tr></table></figure><h3 id="Creat-Table"><a href="#Creat-Table" class="headerlink" title="Creat Table"></a>Creat Table</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> <span class="keyword">TEST</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- Create a new table called 'TableA' in schema 'TEST'</span></span><br><span class="line"><span class="comment">-- Drop the table if it already exists</span></span><br><span class="line"><span class="keyword">IF</span> OBJECT_ID(<span class="string">'TEST.TableA'</span>, <span class="string">'U'</span>) <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> TEST.TableA</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">-- Create the table in the specified schema</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> TableA</span><br><span class="line">(</span><br><span class="line">    TableAId <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">    <span class="comment">-- primary key column</span></span><br><span class="line">    Code [<span class="keyword">NVARCHAR</span>](<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="keyword">Name</span> [<span class="keyword">NVARCHAR</span>](<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">    <span class="comment">-- specify more columns here</span></span><br><span class="line">);</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Create a new table called 'TableB' in schema 'SchemaName'</span></span><br><span class="line"><span class="comment">-- Drop the table if it already exists</span></span><br><span class="line">IF OBJECT_ID('TEST.TableB', 'U') IS NOT NULL</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> TableB</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">-- Create the table in the specified schema</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> TableB</span><br><span class="line">(</span><br><span class="line">    TableBId <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">    <span class="comment">-- primary key column</span></span><br><span class="line">    AId <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    Code [<span class="keyword">NVARCHAR</span>](<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="keyword">Name</span> [<span class="keyword">NVARCHAR</span>](<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">    <span class="comment">-- specify more columns here</span></span><br><span class="line">);</span><br><span class="line">GO</span><br></pre></td></tr></table></figure><h3 id="Creat-Data"><a href="#Creat-Data" class="headerlink" title="Creat Data"></a>Creat Data</h3><figure class="highlight sql"><figcaption><span>Creat Data</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Insert rows into table 'TableA'</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> TableA</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">    ( <span class="comment">-- first row: values for the columns in the list above</span></span><br><span class="line">         <span class="number">1</span>, <span class="string">'A'</span>, <span class="string">'A'</span></span><br><span class="line">),</span><br><span class="line">    ( <span class="comment">-- second row: values for the columns in the list above</span></span><br><span class="line">         <span class="number">2</span>, <span class="string">'B'</span>, <span class="string">'B'</span></span><br><span class="line">),</span><br><span class="line">    (<span class="number">3</span>, <span class="string">'C'</span>, <span class="string">'C'</span>)</span><br><span class="line"><span class="comment">-- add more rows here</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- Insert rows into table 'TableB'</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> TableB</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">    ( <span class="comment">-- columns to insert data into</span></span><br><span class="line">        <span class="number">1</span>, <span class="number">1</span>, <span class="string">'C'</span>, <span class="string">'C'</span></span><br><span class="line">),</span><br><span class="line">    ( <span class="comment">-- first row: values for the columns in the list above</span></span><br><span class="line">        <span class="number">2</span>, <span class="number">1</span>, <span class="string">'D'</span>, <span class="string">'D'</span></span><br><span class="line">),</span><br><span class="line">    ( <span class="comment">-- second row: values for the columns in the list above</span></span><br><span class="line">        <span class="number">3</span>, <span class="number">2</span>, <span class="string">'E'</span>, <span class="string">'E'</span></span><br><span class="line">),</span><br><span class="line">    ( <span class="comment">-- second row: values for the columns in the list above</span></span><br><span class="line">        <span class="number">4</span>, <span class="number">2</span>, <span class="string">'D'</span>, <span class="string">'D'</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">-- add more rows here</span></span><br><span class="line"><span class="keyword">GO</span></span><br></pre></td></tr></table></figure><h2 id="Query-Result"><a href="#Query-Result" class="headerlink" title="Query Result"></a>Query Result</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TableA a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> TableB b <span class="keyword">ON</span>  b.AId =a.TableAId</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">TableAId</th><th style="text-align:center">Code</th><th style="text-align:center">Name</th><th style="text-align:center">TableBId</th><th style="text-align:center">AId</th><th style="text-align:center">Code</th><th style="text-align:center">Name</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">A</td><td style="text-align:center">A</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">C</td><td style="text-align:center">C</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">A</td><td style="text-align:center">A</td><td style="text-align:center">2</td><td style="text-align:center">1</td><td style="text-align:center">D</td><td style="text-align:center">D</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">B</td><td style="text-align:center">B</td><td style="text-align:center">3</td><td style="text-align:center">2</td><td style="text-align:center">E</td><td style="text-align:center">E</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">B</td><td style="text-align:center">B</td><td style="text-align:center">4</td><td style="text-align:center">2</td><td style="text-align:center">D</td><td style="text-align:center">D</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">C</td><td style="text-align:center">C</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TableA a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> TableB b <span class="keyword">ON</span>  b.AId =a.TableAId <span class="keyword">AND</span> a.code =<span class="string">'H'</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">TableAId</th><th style="text-align:center">Code</th><th style="text-align:center">Name</th><th style="text-align:center">TableBId</th><th style="text-align:center">AId</th><th style="text-align:center">Code</th><th style="text-align:center">Name</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">A</td><td style="text-align:center">A</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">B</td><td style="text-align:center">B</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">C</td><td style="text-align:center">C</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TableA a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> TableB b <span class="keyword">ON</span>  b.AId =a.TableAId <span class="keyword">AND</span> a.TableAId =<span class="number">1</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">TableAId</th><th style="text-align:center">Code</th><th style="text-align:center">Name</th><th style="text-align:center">TableBId</th><th style="text-align:center">AId</th><th style="text-align:center">Code</th><th style="text-align:center">Name</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">A</td><td style="text-align:center">A</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">C</td><td style="text-align:center">C</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">A</td><td style="text-align:center">A</td><td style="text-align:center">2</td><td style="text-align:center">1</td><td style="text-align:center">D</td><td style="text-align:center">D</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">B</td><td style="text-align:center">B</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">C</td><td style="text-align:center">C</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TableA a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> TableB b <span class="keyword">ON</span>  b.AId =a.TableAId <span class="keyword">AND</span> b.AId = <span class="number">1</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">TableAId</th><th style="text-align:center">Code</th><th style="text-align:center">Name</th><th style="text-align:center">TableBId</th><th style="text-align:center">AId</th><th style="text-align:center">Code</th><th style="text-align:center">Name</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">A</td><td style="text-align:center">A</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">C</td><td style="text-align:center">C</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">A</td><td style="text-align:center">A</td><td style="text-align:center">2</td><td style="text-align:center">1</td><td style="text-align:center">D</td><td style="text-align:center">D</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">B</td><td style="text-align:center">B</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">C</td><td style="text-align:center">C</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TableA a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> TableB b <span class="keyword">ON</span>  b.AId =a.TableAId <span class="keyword">WHERE</span> a.TableAId = <span class="number">1</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">TableAId</th><th style="text-align:center">Code</th><th style="text-align:center">Name</th><th style="text-align:center">TableBId</th><th style="text-align:center">AId</th><th style="text-align:center">Code</th><th style="text-align:center">Name</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">A</td><td style="text-align:center">A</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">C</td><td style="text-align:center">C</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">A</td><td style="text-align:center">A</td><td style="text-align:center">2</td><td style="text-align:center">1</td><td style="text-align:center">D</td><td style="text-align:center">D</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TableA a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> TableB b <span class="keyword">ON</span>  b.AId =a.TableAId <span class="keyword">WHERE</span> b.AId =<span class="number">1</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">TableAId</th><th style="text-align:center">Code</th><th style="text-align:center">Name</th><th style="text-align:center">TableBId</th><th style="text-align:center">AId</th><th style="text-align:center">Code</th><th style="text-align:center">Name</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">A</td><td style="text-align:center">A</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">C</td><td style="text-align:center">C</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">A</td><td style="text-align:center">A</td><td style="text-align:center">2</td><td style="text-align:center">1</td><td style="text-align:center">D</td><td style="text-align:center">D</td></tr></tbody></table><h3 id="ALL"><a href="#ALL" class="headerlink" title="ALL"></a>ALL</h3><p><img src="https://i.ibb.co/56p1ydb/left-join-on-where.png" alt="IMAGE"></p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><blockquote><p>连接多张表查询时会生成临时表,使用<code>LEFT JOIN</code>时</p></blockquote><ul><li><code>ON</code> 是生成临时表的条件，不管ON的结果是否为真，都会返回左边表的所有数据</li><li><code>AND</code> 是在<code>ON</code>的基础上进行过滤，但是仍会返回左边表的所有数据</li><li><code>WHERE</code> 是在临时表生成后，进行过滤，相当于对单表进行过滤</li></ul><h2 id="REF"><a href="#REF" class="headerlink" title="REF"></a>REF</h2><blockquote><p><a href="https://stackoverflow.com/questions/44696051/sql-different-between-left-join-on-and-left-join-on-where?r=SearchResults" target="_blank" rel="noopener">Stackoverflow</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> LEFT JOIN </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>WindowsProgramMonitorService</title>
      <link href="/2018/11/19/WindowsProgramMonitorService/"/>
      <url>/2018/11/19/WindowsProgramMonitorService/</url>
      
        <content type="html"><![CDATA[<h1 id="WindowsProgramMonitorService"><a href="#WindowsProgramMonitorService" class="headerlink" title="WindowsProgramMonitorService"></a>WindowsProgramMonitorService</h1><hr><h2 id="Topshelf"><a href="#Topshelf" class="headerlink" title="Topshelf"></a>Topshelf</h2><h3 id="Nuget"><a href="#Nuget" class="headerlink" title="Nuget"></a>Nuget</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Install-Package Topshelf</span><br></pre></td></tr></table></figure><h3 id="Main"><a href="#Main" class="headerlink" title="Main"></a>Main</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> rc = HostFactory.Run(x =&gt; &#123;</span><br><span class="line"></span><br><span class="line">                x.Service&lt;ProgramService&gt;(s =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    s.ConstructUsing(name =&gt; <span class="keyword">new</span> ProgramService());</span><br><span class="line">                    s.WhenStarted(p =&gt; p.Start());</span><br><span class="line">                    s.WhenStopped(p =&gt; p.Stop());</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                x.RunAsLocalSystem();</span><br><span class="line"></span><br><span class="line">                x.SetDescription(<span class="string">"Windows Program Monitor Service Host"</span>);</span><br><span class="line">                x.SetDisplayName(<span class="string">"Windows Program Monitor Service"</span>);</span><br><span class="line">                x.SetServiceName(<span class="string">"Windows Program Monitor Service"</span>);</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure><h3 id="ProgramService"><a href="#ProgramService" class="headerlink" title="ProgramService"></a>ProgramService</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">readonly</span> Timer _timer;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ProgramService</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    _timer = <span class="keyword">new</span> Timer(<span class="number">1000</span>) &#123; AutoReset = <span class="literal">true</span> &#125;;</span><br><span class="line">    _timer.Elapsed +=</span><br><span class="line">        (sender, eventArgs) =&gt;</span><br><span class="line">        Console.WriteLine(<span class="string">$"It is <span class="subst">&#123;DateTime.Now&#125;</span> and all is well"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    _timer.Start();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Stop</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    _timer.Stop();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Program"><a href="#Program" class="headerlink" title="Program"></a>Program</h2><h3 id="GETProcess"><a href="#GETProcess" class="headerlink" title="GETProcess"></a>GETProcess</h3><figure class="highlight cs"><figcaption><span>GetMainProcess()</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">GetMainProcess</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> processlist = Process.GetProcesses();</span><br><span class="line">    <span class="keyword">var</span> result = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (Process process <span class="keyword">in</span> processlist)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!String.IsNullOrEmpty(process.MainWindowTitle))</span><br><span class="line">        &#123;</span><br><span class="line">            result += <span class="string">$"Process: <span class="subst">&#123;process.ProcessName&#125;</span>, Window title: <span class="subst">&#123;process.MainWindowTitle&#125;</span>,Start Time : <span class="subst">&#123;process.StartTime&#125;</span> ,Running Time: <span class="subst">&#123;DateTime.Now - process.StartTime&#125;</span>\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="log4net"><a href="#log4net" class="headerlink" title="log4net"></a>log4net</h2><h3 id="Nuget-1"><a href="#Nuget-1" class="headerlink" title="Nuget"></a>Nuget</h3><figure class="highlight plain"><figcaption><span>Nuget</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Install-Package log4net</span><br></pre></td></tr></table></figure><p>###</p><h1 id="REF"><a href="#REF" class="headerlink" title="REF"></a>REF</h1><blockquote><p><a href="https://topshelf.readthedocs.io/en/latest/configuration/quickstart.html" target="_blank" rel="noopener">Topself Quick Start</a></p></blockquote><blockquote><p><a href="http://logging.apache.org/log4net/release/manual/configuration.html" target="_blank" rel="noopener">log4net configuration</a></p></blockquote>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>WITH common_table_expression</title>
      <link href="/2018/11/10/WITH-common-table-expression/"/>
      <url>/2018/11/10/WITH-common-table-expression/</url>
      
        <content type="html"><![CDATA[<h1 id="WITH-common-table-expression"><a href="#WITH-common-table-expression" class="headerlink" title="WITH common_table_expression"></a>WITH common_table_expression</h1><blockquote><p>先上个官方说明 <br><br>Specifies a temporary named result set, known as a common table expression (CTE). This is derived from a simple query and defined within the execution scope of a single SELECT, INSERT, UPDATE, or DELETE statement. This clause can also be used in a CREATE VIEW statement as part of its defining SELECT statement. A common table expression can include references to itself. This is referred to as a recursive common table expression.</p></blockquote><p> 简单理解，就是把一个查询结果临时存到指定的表达式上，这个表达式就叫<code>公用表表达式</code> <code>CTE</code>(Common Table Expression)。 可以简单理解为一个不会实际创建的视图。</p><h2 id="WHY"><a href="#WHY" class="headerlink" title="WHY"></a>WHY</h2><p> 为什么要用这个呢？</p><p> 经常遇到多表需要关联查询，虽然所有的都可以通过<code>视图</code>, <code>临时表</code>，或者多写几个<code>SELECT</code>来实现，但是多数为一次性查询，没必要创建视图，而<code>SELECT</code>的可读性太低（特别是业务复杂的时候）。使用<code>WITH</code>就可以避免这些问题，也不需要多余的开支。</p><h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[ WITH &lt;common_table_expression&gt; [ ,...n ] ]  </span><br><span class="line"></span><br><span class="line">&lt;common_table_expression&gt;::=  </span><br><span class="line">    expression_name [ ( column_name [ ,...n ] ) ]  </span><br><span class="line">    AS  </span><br><span class="line">    ( CTE_query_definition )</span><br></pre></td></tr></table></figure><ul><li><code>expression_name</code> [^xxxka] 公用表表达式的有效标识符（必须不同与其他CTE名称,可以与基视图或基表名称相同）</li><li><code>column_name</code> 公用表达式列名</li><li><code>CTE_query_definition</code> 查询语句（与创建<a href="https://docs.microsoft.com/zh-cn/sql/t-sql/statements/create-view-transact-sql?view=sql-server-2017" target="_blank" rel="noopener">视图</a>要求相同）</li></ul><h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><h3 id="用到的表"><a href="#用到的表" class="headerlink" title="用到的表"></a>用到的表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">卡值流水表 CardHistoryTable(只有总的卡值变化)</span><br><span class="line">卡值流水详情表 CardHistoryDetailTable(包括支付宝，微信卡值变动)</span><br></pre></td></tr></table></figure><h3 id="简单的例子"><a href="#简单的例子" class="headerlink" title="简单的例子"></a>简单的例子</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">WITH CardPerson AS</span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> PersonId,<span class="keyword">MAX</span>(<span class="keyword">id</span>) <span class="keyword">AS</span> maxId <span class="keyword">FROM</span> CardHistoryTable <span class="keyword">GROUP</span> <span class="keyword">BY</span> PersonId)</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> CardPerson</span><br></pre></td></tr></table></figure><h3 id="使用多个CTE"><a href="#使用多个CTE" class="headerlink" title="使用多个CTE"></a>使用多个CTE</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">WITH MiddlePersonDetail AS</span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> m.mainId, m.fee, m.is_wechat, m.wechat_balance, m.id, m.alipay_balance,f.PersonId </span><br><span class="line"><span class="keyword">FROM</span> CardHistoryDetailTable m <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> CardHistoryTable f <span class="keyword">ON</span> f.id = m.mainId</span><br><span class="line">),</span><br><span class="line">MiddlePerson <span class="keyword">AS</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> PersonId,<span class="keyword">MAX</span>(<span class="keyword">id</span>) <span class="keyword">AS</span> maxid <span class="keyword">FROM</span> MiddlePersonDetail <span class="keyword">GROUP</span> <span class="keyword">BY</span> PersonId</span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> MiddlePerson</span><br></pre></td></tr></table></figure><h3 id="实际查询场景"><a href="#实际查询场景" class="headerlink" title="实际查询场景"></a>实际查询场景</h3><p>CardHistoryTable包含多种类型的卡值变化（收入，消费支出，转账，还款等），detail计算的程序有一部分并不处理（比如还款，由操作员手动录入），现在想查每个人最后的余额在两个表是否一致，以及剩余的支付宝，微信余额等,再决定数据处理方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">WITH CardPerson AS</span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> PersonId,<span class="keyword">MAX</span>(<span class="keyword">id</span>) <span class="keyword">AS</span> maxId <span class="keyword">FROM</span> CardHistoryTable <span class="keyword">GROUP</span> <span class="keyword">BY</span> PersonId),</span><br><span class="line">MiddlePersonDetail <span class="keyword">AS</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> m.mainId, m.fee, m.is_wechat, m.wechat_balance, m.id, m.alipay_balance,f.PersonId </span><br><span class="line"><span class="keyword">FROM</span> CardHistoryDetailTable m <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> CardHistoryTable f <span class="keyword">ON</span> f.id = m.mainId</span><br><span class="line">),</span><br><span class="line">MiddlePerson <span class="keyword">AS</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> PersonId,<span class="keyword">MAX</span>(<span class="keyword">id</span>) <span class="keyword">AS</span> maxid <span class="keyword">FROM</span> MiddlePersonDetail <span class="keyword">GROUP</span> <span class="keyword">BY</span> PersonId</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> mg.PersonId,mg.maxid,m.wechat_balance,m.is_wechat,m.alipay_balance,</span><br><span class="line">m.mainId, f.id,f.this_balance </span><br><span class="line"><span class="keyword">FROM</span> MiddlePerson mg </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> CardHistoryDetailTable m <span class="keyword">ON</span> m.id = mg.maxid </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> MiddlePerson fg <span class="keyword">ON</span> fg.PersonId = mg.PersonId </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> CardPerson f <span class="keyword">ON</span> fg.maxId = f.id</span><br><span class="line"><span class="comment">--WHERE ...</span></span><br></pre></td></tr></table></figure><h2 id="一些需要注意的"><a href="#一些需要注意的" class="headerlink" title="一些需要注意的"></a>一些需要注意的</h2><blockquote><ul><li>如果定义了多个 CTE_query_definition，则这些查询定义必须用下列一个集合运算符联接起来：UNION ALL、UNION、EXCEPT 或 INTERSECT。</li><li>CTE 之后必须跟随引用部分或全部 CTE 列的单条 SELECT、INSERT、UPDATE 或 DELETE 语句。 也可以在 CREATE VIEW 语句中将 CTE 指定为视图中 SELECT 定义语句的一部分。</li></ul></blockquote><blockquote><p><a href="https://docs.microsoft.com/zh-cn/sql/t-sql/queries/with-common-table-expression-transact-sql?view=sql-server-2017#guidelines-for-creating-and-using-common-table-expressions" target="_blank" rel="noopener">MORE</a></p></blockquote><p> <strong>本文只讨论非递归公用表达式</strong>，对于递归的参见 <a href="https://docs.microsoft.com/zh-cn/sql/t-sql/queries/with-common-table-expression-transact-sql?view=sql-server-2017#guidelines-for-defining-and-using-recursive-common-table-expressions" target="_blank" rel="noopener">docs.microsoft.com</a></p><h2 id="REF"><a href="#REF" class="headerlink" title="REF"></a>REF</h2><blockquote><p><a href="https://docs.microsoft.com/zh-cn/sql/t-sql/queries/with-common-table-expression-transact-sql" target="_blank" rel="noopener">MICROSOFT DOCS</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> WITH common_table_expression </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>XCOPY</title>
      <link href="/2018/11/07/XCOPY/"/>
      <url>/2018/11/07/XCOPY/</url>
      
        <content type="html"><![CDATA[<h1 id="XOPY"><a href="#XOPY" class="headerlink" title="XOPY"></a>XOPY</h1><hr><p><strong>XCOPY</strong> : Copies files and directories, including subdirectories</p><h2 id="cmd"><a href="#cmd" class="headerlink" title="cmd"></a>cmd</h2><blockquote><ul><li>xcopy /?</li></ul></blockquote><figure class="highlight ps"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">XOPY/复制文件和目录树。</span><br><span class="line"></span><br><span class="line">XCOPY source [destination] [/A | /M] [/D[:date]] [/P] [/S [/E]] [/V] [/W]</span><br><span class="line">                           [/C] [/I] [/Q] [/F] [/L] [/G] [/H] [/R] [/T] [/U]</span><br><span class="line">                           [/K] [/N] [/O] [/X] [/Y] [/-Y] [/Z] [/B] [/J]</span><br><span class="line">                           [/EXCLUDE:file1[+file2][+file3]...]</span><br><span class="line"></span><br><span class="line">  source       Required. Specifies the location and names of the files you want to copy. This parameter must include either a drive or a path./指定要复制的文件。</span><br><span class="line">  destination  Specifies the destination of the files you want to copy. This parameter can include a drive letter and colon, a directory name, a file name, or a combination of these./指定新文件的位置和/或名称。</span><br><span class="line">  /A           Copies only Source files that have their archive file attributes set. /a does not modify the archive file attribute of the source file./仅复制有存档属性集的文件，但不更改属性。</span><br><span class="line">  /M           Copies Source files that have their archive file attributes set. Unlike /a, /m turns off archive file attributes <span class="keyword">in</span> the files that are specified <span class="keyword">in</span> the source./仅复制有存档属性集的文件，并关闭存档属性。</span><br><span class="line">  /D:m-d-y     Copies source files changed on or after the specified date only. <span class="keyword">If</span> you <span class="keyword">do</span> not include a MM-DD-YYYY value, xcopy copies all Source files that are newer than existing Destination files. This command-line option allows you to update files that have changed./复制在指定日期或指定日期以后更改的文件。如果没有提供日期，只复制那些源时间比目标时间新的文件。</span><br><span class="line">  /EXCLUDE:file1[+file2][+file3]... Specifies a list of files. At least one file must be specified. Each file will contain search strings with each string on a separate line <span class="keyword">in</span> the file.When any of the strings match any part of the absolute path of the file to be copied, that file will be excuded from being copied. <span class="keyword">For</span> example, specifying the string obj will exclude all files underneath the directory obj or all files with the .obj extension./指定含有字符串的文件列表。每个字符串在文件中应位于单独的一行。如果任何字符串与复制文件的绝对路径的任何部分相符，则排除复制该文件。例如，指定如 \obj\ 或 .obj 的字符串会分别排除目录 obj 下面的所有文件或带有.obj 扩展名的所有文件。</span><br><span class="line">  /P           Prompts you to confirm whether you want to create each destination file./创建每个目标文件之前提示你。</span><br><span class="line">  /S           Copies directories and subdirectories, unless they are empty. <span class="keyword">If</span> you omit /s, xcopy works within a single directory./复制目录和子目录，不包括空目录。</span><br><span class="line">  /E           Copies all subdirectories, even <span class="keyword">if</span> they are empty. Use /e with the /s and /t command-line options./复制目录和子目录，包括空目录。与 /S /E 相同。可以用来修改 /T。</span><br><span class="line">  /V           Verifies each file as it is written to the destination file to make sure that the destination files are identical to the source files./验证每个新文件的大小。</span><br><span class="line">  /W           Displays the following message and waits <span class="keyword">for</span> your response before starting to copy files:Press any key to <span class="keyword">begin</span> copying file(s)/提示你在复制前按键。</span><br><span class="line">  /C           Ignores errors./即使有错误，也继续复制。</span><br><span class="line">  /I           <span class="keyword">If</span> Source is a directory or contains wildcards and Destination does not exist, xcopy assumes Destination specifies a directory name and creates a new directory. Then, xcopy copies all specified files into the new directory. By default, xcopy prompts you to specify whether Destination is a file or a directory./如果目标不存在，且要复制多个文件，则假定目标必须是目录。</span><br><span class="line">  /Q           Suppresses the display of xcopy messages./复制时不显示文件名。</span><br><span class="line">  /F           Displays source and destination file names <span class="keyword">while</span> copying./复制时显示完整的源文件名和目标文件名。</span><br><span class="line">  /L           Displays a list of files that are to be copied./显示要复制的文件。</span><br><span class="line">  /G           Creates decrypted Destination files when the destination does not support encryption./允许将加密文件复制到不支持加密的目标。</span><br><span class="line">  /H           Copies files with hidden and system file attributes. By default, xcopy does not copy hidden or system files/也复制隐藏文件和系统文件。</span><br><span class="line">  /R           Copies read-only files./覆盖只读文件。</span><br><span class="line">  /T           Copies the subdirectory structure (that is, the tree) only, not files. To copy empty directories, you must include the /e command-line option./创建目录结构，但不复制文件。不包括空目录或子目录。/T /E 包括空目录和子目录。</span><br><span class="line">  /U           Copies files from Source that exist on Destination only./只复制已经存在于目标中的文件。</span><br><span class="line">  /K           Copies files and retains the read-only attribute on Destination files <span class="keyword">if</span> present on the Source files. By default, xcopy removes the read-only attribute./复制属性。一般的 Xcopy 会重置只读属性。</span><br><span class="line">  /N           Creates copies by using the NTFS short file or directory names. /n is required when you copy files or directories from an NTFS volume to a FAT volume or when the FAT file system naming convention (that is, <span class="number">8.3</span> characters) is required on the Destination file system. The Destination file system can be FAT or NTFS./用生成的短名称复制。</span><br><span class="line">  /O           Copies file ownership and discretionary access control list (DACL) information./复制文件所有权和 ACL 信息。</span><br><span class="line">  /X           Copies file audit settings and system access control list (SACL) information (implies /o)./复制文件审核设置(隐含 /O)。</span><br><span class="line">  /Y           Suppresses prompting to confirm that you want to overwrite an existing destination file./取消提示以确认要覆盖现有目标文件。</span><br><span class="line">  /-Y          Prompts to confirm that you want to overwrite an existing destination file./要提示以确认要覆盖</span><br><span class="line">现有目标文件。</span><br><span class="line">  /Z           Copies over a network <span class="keyword">in</span> restartable mode./在可重新启动模式下复制网络文件。</span><br><span class="line">  /B           Copies the symbolic link instead of the files. This parameter was introduced <span class="keyword">in</span> Windows Vista®./复制符号链接本身与链接目标。</span><br><span class="line">  /J           Copies files without buffering. Recommended <span class="keyword">for</span> very large files. This parameter was added <span class="keyword">in</span> Windows Server <span class="number">2008</span> R2./复制时不使用缓冲的 I/O。推荐复制大文件时使用。</span><br><span class="line">  /?Displays help at the command prompt./在命令提示符中显示帮助</span><br></pre></td></tr></table></figure><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><blockquote><ul><li>copy directories</li></ul></blockquote><figure class="highlight ps"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XCOPY D:\workspace\Demo D:\publish\Demo /E /Y /C /D</span><br></pre></td></tr></table></figure><blockquote><ul><li>copy file</li></ul></blockquote><figure class="highlight ps"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XCOPY D:\config\Demo\demo.config D:\publish\Demo\demo.config /Y</span><br></pre></td></tr></table></figure><h2 id="REF"><a href="#REF" class="headerlink" title="REF"></a>REF</h2><blockquote><ul><li><a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/xcopy" target="_blank" rel="noopener">Xopy</a></li></ul></blockquote><blockquote><ul><li><a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/xcopy#BKMK_addref" target="_blank" rel="noopener">Additional</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Windows Commands </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows Commands </tag>
            
            <tag> XCOPY </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Failed to load Msxmlsql.dll</title>
      <link href="/2018/07/16/Failed-to-load-Msxmlsql-dll/"/>
      <url>/2018/07/16/Failed-to-load-Msxmlsql-dll/</url>
      
        <content type="html"><![CDATA[<h1 id="Failed-to-load-Msxmlsql-dll"><a href="#Failed-to-load-Msxmlsql-dll" class="headerlink" title="Failed to load Msxmlsql.dll"></a>Failed to load Msxmlsql.dll</h1><ul><li>Solution：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\Microsoft SQL Server\100\Shared\msxmlsql.dll </span><br><span class="line">to</span><br><span class="line">C:\Program Files\Microsoft SQL Server\MSSQL10_50.[veeam-dbinstance]\MSSQL\Binn </span><br><span class="line"></span><br><span class="line">then copy &quot;msxmlsql.rll&quot; from </span><br><span class="line">C:\Program Files\Microsoft SQL Server\100\Shared\Resources\1033\msxmlsql.rll </span><br><span class="line">to</span><br><span class="line">C:\Program Files\Microsoft SQL Server\MSSQL10_50.[veeam-dbinstance]\MSSQL\Binn\Resources\1033</span><br><span class="line"></span><br><span class="line">Restart SQL Server Service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Error </category>
          
          <category> SQL Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL Server </tag>
            
            <tag> SQL Server Error </tag>
            
            <tag> SQL Server 2008R2 </tag>
            
            <tag> Msxmlsql.dll </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SQL PadLeft</title>
      <link href="/2018/05/01/SQL%20PadLeft/"/>
      <url>/2018/05/01/SQL%20PadLeft/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL-PadLeft"><a href="#SQL-PadLeft" class="headerlink" title="SQL PadLeft"></a>SQL PadLeft</h1><ul><li>SQL</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PRINT RIGHT(CAST(REPLICATE('0', LEN(no_start)) + CAST(no_start + (inventory - 1) AS VARCHAR(50)) AS VARCHAR(50)), LEN(no_start))</span><br><span class="line"></span><br><span class="line">PRINT RIGHT(CAST(REPLICATE('0', LEN('000001')) + CAST('000001' + (50 - 1) AS VARCHAR(50)) AS VARCHAR(50)), LEN('000001'))</span><br></pre></td></tr></table></figure><a id="more"></a><ul><li>Result<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">000050</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><p>Test Sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">PRINT RIGHT(CAST(REPLICATE('0', LEN('000001')) + CAST('000001' + (50 - 1) AS VARCHAR(50)) AS VARCHAR(50)), LEN('000001'))</span><br><span class="line"></span><br><span class="line">PRINT REPLICATE('0',5)</span><br><span class="line"></span><br><span class="line">PRINT REPLICATE('0',5) + 123</span><br><span class="line"></span><br><span class="line">PRINT REPLICATE('0',5) + '123'</span><br><span class="line"></span><br><span class="line">PRINT REPLICATE('0',5) + STR(123)</span><br><span class="line"></span><br><span class="line">PRINT REPLICATE('0',5) + CAST(123 AS varchar(20))</span><br><span class="line"></span><br><span class="line">PRINT STR(123)</span><br><span class="line"></span><br><span class="line">PRINT STR(123,5,2)</span><br><span class="line"></span><br><span class="line">PRINT STR(12345678900)</span><br></pre></td></tr></table></figure><p>Test Result</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">000050</span><br><span class="line">00000</span><br><span class="line">123</span><br><span class="line">00000123</span><br><span class="line">00000       123</span><br><span class="line">00000123</span><br><span class="line">        123</span><br><span class="line">123.0</span><br></pre></td></tr></table></figure><h2 id="REF"><a href="#REF" class="headerlink" title="REF"></a>REF</h2><blockquote><p>C# <a href="https://msdn.microsoft.com/zh-cn/library/system.string.padleft.aspx" target="_blank" rel="noopener">PadLeft</a></p></blockquote><blockquote><p>SQL <a href="https://docs.microsoft.com/zh-cn/sql/t-sql/functions/replicate-transact-sql" target="_blank" rel="noopener">REPLICATE</a></p></blockquote><blockquote><p>SQL <a href="https://docs.microsoft.com/zh-cn/sql/t-sql/functions/str-transact-sql" target="_blank" rel="noopener">STR</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> REPLICATE </tag>
            
            <tag> C# </tag>
            
            <tag> PadLeft </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>README</title>
      <link href="/2018/05/01/README/"/>
      <url>/2018/05/01/README/</url>
      
        <content type="html"><![CDATA[<ul><li>I Will Show You</li></ul>]]></content>
      
      
      
    </entry>
    
  
  
</search>
